import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.table.DefaultTableModel;

public class ProductRegistrationForm extends javax.swing.JFrame {
    
    public ProductRegistrationForm() {
        initComponents();
        QtyTF.setBackground(new Color(0,0,0,0));
        ProductNameTF.setBackground(new Color(0,0,0,0));
        PriceTF.setBackground(new Color (0,0,0,0));
        searchData.setBackground(new Color(0,0,0,0));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        QtyTF = new javax.swing.JTextField();
        ProductNameTF = new javax.swing.JTextField();
        searchData = new javax.swing.JTextField();
        PriceTF = new javax.swing.JTextField();
        HideTableBtn = new javax.swing.JButton();
        ShowTableBtn = new javax.swing.JButton();
        AddBtn = new javax.swing.JButton();
        UpdateBtn = new javax.swing.JButton();
        DeleteBtn = new javax.swing.JButton();
        SearchBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(606, 540));

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI", 1, 36)); // NOI18N
        jLabel1.setText("Product Information");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/d7ae0i4-0adad58d-57b7-46a4-b980-4213bf6c107c.gif"))); // NOI18N
        jLabel6.setText("jLabel6");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, -10, 310, 190));

        QtyTF.setBorder(null);
        QtyTF.setSelectionColor(new java.awt.Color(153, 153, 153));
        jPanel2.add(QtyTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 230, 130, -1));

        ProductNameTF.setText(" ");
        ProductNameTF.setBorder(null);
        ProductNameTF.setSelectionColor(new java.awt.Color(153, 153, 153));
        jPanel2.add(ProductNameTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 50, 130, -1));

        searchData.setText(" ");
        searchData.setBorder(null);
        searchData.setSelectionColor(new java.awt.Color(153, 153, 153));
        jPanel2.add(searchData, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 230, 130, -1));

        PriceTF.setText(" ");
        PriceTF.setBorder(null);
        PriceTF.setSelectionColor(new java.awt.Color(153, 153, 153));
        jPanel2.add(PriceTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 140, 130, -1));

        HideTableBtn.setBackground(new java.awt.Color(51, 51, 51));
        HideTableBtn.setForeground(new java.awt.Color(255, 255, 255));
        HideTableBtn.setText("Show Table");
        HideTableBtn.setBorder(null);
        HideTableBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HideTableBtnActionPerformed(evt);
            }
        });
        jPanel2.add(HideTableBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 340, 260, 30));

        ShowTableBtn.setBackground(new java.awt.Color(51, 51, 51));
        ShowTableBtn.setForeground(new java.awt.Color(255, 255, 255));
        ShowTableBtn.setText("Hide Table");
        ShowTableBtn.setBorder(null);
        ShowTableBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowTableBtnActionPerformed(evt);
            }
        });
        jPanel2.add(ShowTableBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 340, 240, 30));

        AddBtn.setBackground(new java.awt.Color(51, 51, 51));
        AddBtn.setForeground(new java.awt.Color(255, 255, 255));
        AddBtn.setText("Add");
        AddBtn.setBorder(null);
        AddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBtnActionPerformed(evt);
            }
        });
        jPanel2.add(AddBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 300, 50, 30));

        UpdateBtn.setBackground(new java.awt.Color(51, 51, 51));
        UpdateBtn.setForeground(new java.awt.Color(255, 255, 255));
        UpdateBtn.setText("Update");
        UpdateBtn.setBorder(null);
        UpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateBtnActionPerformed(evt);
            }
        });
        jPanel2.add(UpdateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 300, 60, 30));

        DeleteBtn.setBackground(new java.awt.Color(51, 51, 51));
        DeleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        DeleteBtn.setText("Delete");
        DeleteBtn.setBorder(null);
        DeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBtnActionPerformed(evt);
            }
        });
        jPanel2.add(DeleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 300, 60, 30));

        SearchBtn.setBackground(new java.awt.Color(51, 51, 51));
        SearchBtn.setForeground(new java.awt.Color(255, 255, 255));
        SearchBtn.setText("Search");
        SearchBtn.setBorder(null);
        SearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBtnActionPerformed(evt);
            }
        });
        jPanel2.add(SearchBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 300, 60, 30));

        jLabel3.setBackground(new java.awt.Color(204, 204, 204));
        jLabel3.setFont(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
        jLabel3.setText("   Product ID: ___________________________");
        jLabel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel3.setOpaque(true);
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 220, 220, 40));

        jLabel8.setBackground(new java.awt.Color(204, 204, 204));
        jLabel8.setFont(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
        jLabel8.setText("   Qty: _______________________________________");
        jLabel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel8.setOpaque(true);
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, 240, 40));

        jLabel4.setBackground(new java.awt.Color(204, 204, 204));
        jLabel4.setFont(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
        jLabel4.setText("   Product Name: ___________________________");
        jLabel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel4.setOpaque(true);
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, 240, 40));

        jLabel5.setBackground(new java.awt.Color(204, 204, 204));
        jLabel5.setFont(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
        jLabel5.setText("   Price: ______________________________________");
        jLabel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel5.setOpaque(true);
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, 240, 40));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/4853336 (1).jpg"))); // NOI18N
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 590, -1));

        Table.setBackground(new java.awt.Color(153, 153, 153));
        Table.setForeground(new java.awt.Color(255, 255, 255));
        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table.setOpaque(false);
        jScrollPane1.setViewportView(Table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBtnActionPerformed
        String prod_name, price, qty, query;
        
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:MySQL://localhost:3306/product_registration";
            String user = "root";
            String pass = "";
            
            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();
            
            if("".equals(ProductNameTF.getText())){
                JOptionPane.showMessageDialog(new JFrame(), "Product Name is required", "Dialog", JOptionPane.ERROR_MESSAGE);
            }
            else if("".equals(searchData.getText())){
                JOptionPane.showMessageDialog(new JFrame(), "Price is required", "Dialog", JOptionPane.ERROR_MESSAGE);
            }
            else if("".equals(QtyTF.getText())){
                JOptionPane.showMessageDialog(new JFrame(), "Quantity is required", "Dialog", JOptionPane.ERROR_MESSAGE);
            }
            else {
                prod_name = ProductNameTF.getText();
                price = PriceTF.getText();
                qty = QtyTF.getText();
                
                query = "INSERT INTO product_info (product_name, price, qty) " + "VALUES ('"+ prod_name +"','"+ price +"','"+ qty +"')";
                
                st.executeUpdate(query);
                
                ProductNameTF.setText("");
                PriceTF.setText("");
                QtyTF.setText("");
                searchData.setText("");
                
                loadData();
                showMessageDialog(null, "Successfully registered.");
                con.close();
            }
        }catch(Exception e){
                System.out.println("Error "+ e.getMessage());
            }
    }//GEN-LAST:event_AddBtnActionPerformed

    private void UpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateBtnActionPerformed
        String ID;
        int notFound = 0;
        String prod_name, price, qty;
        
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:MySQL://localhost:3306/product_registration";
            String user = "root";
            String pass = "";
            
            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();
            
            ID = searchData.getText();
            
            if("".equals(ID)){
                JOptionPane.showMessageDialog(new JFrame(), "ID is required", "Dialog", JOptionPane.ERROR_MESSAGE);
            }
            else{
                String sql = "SELECT * FROM product_info WHERE id =" + ID;
                ResultSet rs = st.executeQuery(sql);
                while(rs.next()){
                    notFound = 1;
                    prod_name = ProductNameTF.getText();
                    price = PriceTF.getText();
                    qty = QtyTF.getText();
                    String sql2 = "UPDATE product_info SET product_name='"+prod_name+"', price='"+price+"', qty='"+qty+"' WHERE id=" +ID;
                    st.executeUpdate(sql2);
                    
                    loadData();
                    showMessageDialog(new JFrame(), "Successfully updated.", "Dialog" , JOptionPane.INFORMATION_MESSAGE);
                    con.close();
                }
                if(notFound==0){
                    JOptionPane.showMessageDialog(new JFrame(), "invalid ID", "Dialog", JOptionPane.ERROR_MESSAGE);
                }
            }
            
        }catch(Exception e){
            System.out.println("Error "+ e.getMessage());
        }
    }//GEN-LAST:event_UpdateBtnActionPerformed

    private void DeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBtnActionPerformed
        String ID;
        int notFound = 0;
        
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:MySQL://localhost:3306/product_registration";
            String user = "root";
            String pass = "";
            
            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();
            
            ID = searchData.getText();
            
            if("".equals(ID)){
                JOptionPane.showMessageDialog(new JFrame(), "ID is required", "Dialog", JOptionPane.ERROR_MESSAGE);
            }
            else{
                String sql = "SELECT * FROM product_info WHERE id =" + ID;
                ResultSet rs = st.executeQuery(sql);
                while(rs.next()){
                    notFound = 1;
                    String sql2 = "DELETE FROM product_info WHERE id ="+ID;
                    st.executeUpdate(sql2);
                    
                    loadData();
                    showMessageDialog(new JFrame(), "Successfully deleted.", "Dialog" , JOptionPane.WARNING_MESSAGE);
                    con.close();
                    
                }
                if(notFound == 0){
                    JOptionPane.showMessageDialog(new JFrame(), "invalid ID", "Dialog", JOptionPane.ERROR_MESSAGE);
                }
            }
            
        }catch(Exception e){
            System.out.println("Error "+ e.getMessage());
        }
    }//GEN-LAST:event_DeleteBtnActionPerformed

    private void SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnActionPerformed
        String ID;
        int notFound = 0;
        
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:MySQL://localhost:3306/product_registration";
            String user = "root";
            String pass = "";
            
            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();
            
            ID = searchData.getText();
            
            if("".equals(ID)){
                JOptionPane.showMessageDialog(new JFrame(), "ID is required", "Dialog", JOptionPane.ERROR_MESSAGE);
            }
            else{
                String sql = "SELECT * FROM product_info WHERE ID =" + ID;
                ResultSet rs = st.executeQuery(sql);
                while(rs.next()){
                    ProductNameTF.setText(rs.getString("product_name"));
                    PriceTF.setText(rs.getString("price"));
                    QtyTF.setText(rs.getString("qty"));
                    notFound = 1;
                    showMessageDialog(new JFrame(), "ID successfully retrieved.", "Dialog" , JOptionPane.INFORMATION_MESSAGE);
                    con.close();
                }
                if(notFound == 0){
                    JOptionPane.showMessageDialog(new JFrame(), "invalid ID", "Dialog", JOptionPane.ERROR_MESSAGE);
                }
            }
            
        }catch(Exception e){
            System.out.println("Error "+ e.getMessage());
        }
    }//GEN-LAST:event_SearchBtnActionPerformed

    private void HideTableBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HideTableBtnActionPerformed
        ProductRegistrationForm x = new ProductRegistrationForm();
        x.setSize(605, 1013);
        x.setVisible(true);
        x.setLocationRelativeTo(null);
        x.loadData();
        dispose();
        
    }//GEN-LAST:event_HideTableBtnActionPerformed

    private void ShowTableBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowTableBtnActionPerformed
        ProductRegistrationForm x = new ProductRegistrationForm();
        x.setSize(606, 540);
        x.setVisible(true);
        x.setLocationRelativeTo(null);
        x.loadData();
        dispose();
    }//GEN-LAST:event_ShowTableBtnActionPerformed

public void loadData(){
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:MySQL://localhost:3306/product_registration";
            String user = "root";
            String pass = "";
            
            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();
            
            DefaultTableModel model = new DefaultTableModel(new String[]{"id","Product Name","Price","Quantity"},0);
            
            Table.setModel(model);
            
            String sql = "SELECT * FROM product_info";
            
            ResultSet rs = st.executeQuery(sql);
            
            String i, p, pr, q;
            
            while(rs.next()){
                i = rs.getString("id");
                p = rs.getString("product_name");
                pr = rs.getString("price");
                q = rs.getString("qty");
                
                model.addRow(new Object[]{i, p, pr, q});
            }
            
        }catch (Exception e){
            System.out.println("Error"+e.getMessage());
        }
    }
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductRegistrationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductRegistrationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductRegistrationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductRegistrationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ProductRegistrationForm x = new ProductRegistrationForm();
                x.loadData();
                x.setLocationRelativeTo(null);
                x.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddBtn;
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JButton HideTableBtn;
    private javax.swing.JTextField PriceTF;
    private javax.swing.JTextField ProductNameTF;
    private javax.swing.JTextField QtyTF;
    private javax.swing.JButton SearchBtn;
    private javax.swing.JButton ShowTableBtn;
    private javax.swing.JTable Table;
    private javax.swing.JButton UpdateBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField searchData;
    // End of variables declaration//GEN-END:variables
}
